{"version":3,"file":"talk-src_services_conversationsService_js-src_services_avatarService_ts-src_components_RoomSelecto-fedca7.js?v=3b48451b1533357005e2","mappings":"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","sources":["webpack:///talk/src/constants.js","webpack:///talk/src/services/conversationsService.js","webpack:///talk/src/services/avatarService.ts","webpack://talk/./src/components/RoomSelector.vue?8562","webpack:///talk/node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///talk/node_modules/@nextcloud/vue/dist/Directives/Tooltip.mjs"],"sourcesContent":["/**\n * @copyright Copyright (c) 2019 Joas Schilling <coding@schilljs.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n */\nexport const SIGNALING = {\n\tMODE: {\n\t\tINTERNAL: 'internal',\n\t\tEXTERNAL: 'external',\n\t\tCLUSTER_CONVERSATION: 'conversation_cluster',\n\t},\n}\n\nexport const SESSION = {\n\tSTATE: {\n\t\tINACTIVE: 0,\n\t\tACTIVE: 1,\n\t},\n}\n\nexport const CHAT = {\n\tFETCH_LIMIT: 100,\n\tMINIMUM_VISIBLE: 5,\n}\n\nexport const CALL = {\n\tRECORDING: {\n\t\tOFF: 0,\n\t\tVIDEO: 1,\n\t\tAUDIO: 2,\n\t\tVIDEO_STARTING: 3,\n\t\tAUDIO_STARTING: 4,\n\t\tFAILED: 5,\n\t},\n\tRECORDING_CONSENT: {\n\t\tOFF: 0,\n\t\tREQUIRED: 1,\n\t\tOPTIONAL: 2,\n\t},\n}\n\nexport const CONVERSATION = {\n\tSTART_CALL: {\n\t\tEVERYONE: 0,\n\t\tUSERS: 1,\n\t\tMODERATORS: 2,\n\t},\n\n\tSTATE: {\n\t\tREAD_WRITE: 0,\n\t\tREAD_ONLY: 1,\n\t},\n\n\tLISTABLE: {\n\t\tNONE: 0,\n\t\tUSERS: 1,\n\t\tALL: 2,\n\t},\n\n\tTYPE: {\n\t\tONE_TO_ONE: 1,\n\t\tGROUP: 2,\n\t\tPUBLIC: 3,\n\t\tCHANGELOG: 4,\n\t\tONE_TO_ONE_FORMER: 5,\n\t\tNOTE_TO_SELF: 6,\n\t},\n\n\tBREAKOUT_ROOM_MODE: {\n\t\tNOT_CONFIGURED: 0,\n\t\tAUTOMATIC: 1,\n\t\tMANUAL: 2,\n\t\tFREE: 3,\n\t},\n\n\tBREAKOUT_ROOM_STATUS: {\n\t\t// Main room\n\t\tSTOPPED: 0,\n\t\tSTARTED: 1,\n\t\t// Breakout rooms\n\t\tSTATUS_ASSISTANCE_RESET: 0,\n\t\tSTATUS_ASSISTANCE_REQUESTED: 2,\n\t},\n\n\tOBJECT_TYPE: {\n\t\tEMAIL: 'emails',\n\t\tFILE: 'file',\n\t\tPHONE: 'phone',\n\t\tCIRCLES: 'circles',\n\t\tVIDEO_VERIFICATION: 'share:password',\n\t\tBREAKOUT_ROOM: 'room',\n\t\tDEFAULT: '',\n\t},\n\n\tMAX_NAME_LENGTH: 255,\n\tMAX_DESCRIPTION_LENGTH: 500,\n}\nexport const ATTENDEE = {\n\tACTOR_TYPE: {\n\t\tUSERS: 'users',\n\t\tGUESTS: 'guests',\n\t\tEMAILS: 'emails',\n\t\tGROUPS: 'groups',\n\t\tCIRCLES: 'circles',\n\t\tBOTS: 'bots',\n\t\tBRIDGED: 'bridged',\n\t\tFEDERATED_USERS: 'federated_users',\n\t\tPHONES: 'phones',\n\t\t/* @internal Only use with server APIs (like /core/autocomplete/get) and never with Talk APIs */\n\t\tREMOTES: 'remotes',\n\t},\n\n\tBRIDGE_BOT_ID: 'bridge-bot',\n\n\tCHANGELOG_BOT_ID: 'changelog',\n}\nexport const PARTICIPANT = {\n\tCALL_FLAG: {\n\t\tDISCONNECTED: 0,\n\t\tIN_CALL: 1,\n\t\tWITH_AUDIO: 2,\n\t\tWITH_VIDEO: 4,\n\t\tWITH_PHONE: 8,\n\t},\n\n\tSIP_FLAG: {\n\t\tMUTE_MICROPHONE: 1,\n\t\tMUTE_SPEAKER: 2,\n\t\tSPEAKING: 4,\n\t\tRAISE_HAND: 8,\n\t},\n\n\tSIP_DIALOUT_FLAG: {\n\t\tNONE: 0,\n\t\tMUTE_MICROPHONE: 1,\n\t\tMUTE_SPEAKER: 2,\n\t},\n\n\tNOTIFY: {\n\t\tDEFAULT: 0,\n\t\tALWAYS: 1,\n\t\tMENTION: 2,\n\t\tNEVER: 3,\n\t},\n\n\tNOTIFY_CALLS: {\n\t\tOFF: 0,\n\t\tON: 1,\n\t},\n\n\tTYPE: {\n\t\tOWNER: 1,\n\t\tMODERATOR: 2,\n\t\tUSER: 3,\n\t\tGUEST: 4,\n\t\tUSER_SELF_JOINED: 5,\n\t\tGUEST_MODERATOR: 6,\n\t},\n\n\tPERMISSIONS: {\n\t\tDEFAULT: 0,\n\t\tCUSTOM: 1,\n\t\tCALL_START: 2,\n\t\tCALL_JOIN: 4,\n\t\tLOBBY_IGNORE: 8,\n\t\tPUBLISH_AUDIO: 16,\n\t\tPUBLISH_VIDEO: 32,\n\t\tPUBLISH_SCREEN: 64,\n\t\tCHAT: 128,\n\t\tMAX_DEFAULT: 254,\n\t\tMAX_CUSTOM: 255,\n\t},\n}\n\nexport const SHARED_ITEM = {\n\tTYPES: {\n\t\tAUDIO: 'audio',\n\t\tDECK_CARD: 'deckcard',\n\t\tFILE: 'file',\n\t\tLOCATION: 'location',\n\t\tMEDIA: 'media',\n\t\tOTHER: 'other',\n\t\tPOLL: 'poll',\n\t\tRECORDING: 'recording',\n\t\tVOICE: 'voice',\n\t},\n}\n\nexport const WEBINAR = {\n\tLOBBY: {\n\t\tNONE: 0,\n\t\tNON_MODERATORS: 1,\n\t},\n\n\tSIP: {\n\t\tDISABLED: 0,\n\t\tENABLED: 1,\n\t\tENABLED_NO_PIN: 2,\n\t},\n}\n\nexport const SHARE = {\n\tTYPE: {\n\t\tUSER: 0,\n\t\tGROUP: 1,\n\t\tEMAIL: 4,\n\t\tREMOTE: 6,\n\t\tCIRCLE: 7,\n\t},\n}\n\nexport const FLOW = {\n\tMESSAGE_MODES: {\n\t\tNO_MENTION: 1,\n\t\tSELF_MENTION: 2,\n\t\tROOM_MENTION: 3,\n\t},\n}\n\nexport const POLL = {\n\tSTATUS: {\n\t\tOPEN: 0,\n\t\tCLOSED: 1,\n\t},\n\n\tMODE: {\n\t\tPUBLIC: 0,\n\t\tHIDDEN: 1,\n\t},\n\n\tANSWER_TYPE: {\n\t\tMULTIPLE: 0,\n\t\tSINGLE: 1,\n\t},\n}\n\nexport const PRIVACY = {\n\tPUBLIC: 0,\n\tPRIVATE: 1,\n}\n\nexport const SIMULCAST = {\n\tLOW: 0,\n\tMEDIUM: 1,\n\tHIGH: 2,\n}\n\nexport const VIRTUAL_BACKGROUND = {\n\tBACKGROUND_TYPE: {\n\t\tBLUR: 'blur',\n\t\tIMAGE: 'image',\n\t\tVIDEO: 'video',\n\t\tVIDEO_STREAM: 'video-stream',\n\t},\n\tBLUR_STRENGTH: {\n\t\tDEFAULT: 10,\n\t},\n}\n\nexport const BOT = {\n\tSTATE: {\n\t\tDISABLED: 0,\n\t\tENABLED: 1,\n\t\tNO_SETUP: 2,\n\t},\n}\n\nexport const AVATAR = {\n\tSIZE: {\n\t\tEXTRA_SMALL: 22,\n\t\tSMALL: 32,\n\t\tDEFAULT: 44,\n\t\tMEDIUM: 64,\n\t\tLARGE: 128,\n\t\tEXTRA_LARGE: 180,\n\t\tFULL: 512,\n\t},\n}\n\nexport const FEDERATION = {\n\tSTATE: {\n\t\tPENDING: 0,\n\t\tACCEPTED: 1,\n\t},\n}\n","/**\n * @copyright Copyright (c) 2019 Marco Ambrosini <marcoambrosini@icloud.com>\n *\n * @author Marco Ambrosini <marcoambrosini@icloud.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport axios from '@nextcloud/axios'\nimport { getCapabilities } from '@nextcloud/capabilities'\nimport { generateOcsUrl } from '@nextcloud/router'\n\nimport { ATTENDEE, CONVERSATION, SHARE } from '../constants.js'\n\nconst canInviteToFederation = getCapabilities()?.spreed?.features?.includes('federation-v1')\n\t&& getCapabilities()?.spreed?.config?.federation?.enabled\n\t&& getCapabilities()?.spreed?.config?.federation?.['outgoing-enabled']\n\n/**\n * Fetches the conversations from the server.\n *\n * @param {object} options options\n */\nconst fetchConversations = async function(options) {\n\toptions = options || {}\n\toptions.params = options.params || {}\n\toptions.params.includeStatus = true\n\treturn axios.get(generateOcsUrl('apps/spreed/api/v4/room'), options)\n}\n\n/**\n * Fetches a conversation from the server.\n *\n * @param {string} token The token of the conversation to be fetched.\n */\nconst fetchConversation = async function(token) {\n\treturn axios.get(generateOcsUrl('apps/spreed/api/v4/room/{token}', { token }))\n}\n\n/**\n * Fetch listed conversations\n *\n * @param {string} searchText The string that will be used in the search query.\n * @param {object} options options\n */\nconst searchListedConversations = async function({ searchText }, options) {\n\treturn axios.get(generateOcsUrl('apps/spreed/api/v4/listed-room'), {\n\t\t...options,\n\t\tparams: {\n\t\t\tsearchTerm: searchText,\n\t\t},\n\t})\n}\n\n/**\n * Generate note-to-self conversation\n *\n */\nconst fetchNoteToSelfConversation = async function() {\n\treturn axios.get(generateOcsUrl('apps/spreed/api/v4/room/note-to-self'))\n}\n\n/**\n * Fetch possible conversations\n *\n * @param {object} data the wrapping object;\n * @param {string} data.searchText The string that will be used in the search query.\n * @param {string} [data.token] The token of the conversation (if any), or \"new\" for a new one\n * @param {boolean} [data.onlyUsers] Only return users\n * @param {object} options options\n */\nconst searchPossibleConversations = async function({ searchText, token, onlyUsers }, options) {\n\ttoken = token || 'new'\n\tonlyUsers = !!onlyUsers\n\n\tconst shareTypes = [\n\t\tSHARE.TYPE.USER,\n\t\t!onlyUsers ? SHARE.TYPE.GROUP : null,\n\t\t!onlyUsers ? SHARE.TYPE.CIRCLE : null,\n\t\t(!onlyUsers && token !== 'new') ? SHARE.TYPE.EMAIL : null,\n\t\t(!onlyUsers && canInviteToFederation) ? SHARE.TYPE.REMOTE : null,\n\t].filter(type => type !== null)\n\n\treturn axios.get(generateOcsUrl('core/autocomplete/get'), {\n\t\t...options,\n\t\tparams: {\n\t\t\tsearch: searchText,\n\t\t\titemType: 'call',\n\t\t\titemId: token,\n\t\t\tshareTypes,\n\t\t},\n\t})\n}\n\n/**\n * Create a new one to one conversation with the specified user.\n *\n * @param {string} userId The ID of the user with which the new conversation will be opened.\n */\nconst createOneToOneConversation = async function(userId) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room'), {\n\t\troomType: CONVERSATION.TYPE.ONE_TO_ONE,\n\t\tinvite: userId,\n\t})\n}\n\n/**\n * Create a new group conversation.\n *\n * @param {string} invite The group/circle ID\n * @param {string} source The source of the invite ID (defaults to groups)\n */\nconst createGroupConversation = async function(invite, source) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room'), {\n\t\troomType: CONVERSATION.TYPE.GROUP,\n\t\tinvite,\n\t\tsource: source || ATTENDEE.ACTOR_TYPE.GROUPS,\n\t})\n}\n\n/**\n * Create a new private conversation.\n *\n * @param {string} conversationName The name for the new conversation\n * @param {string} [objectType] The conversation object type\n */\nconst createPrivateConversation = async function(conversationName, objectType) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room'), {\n\t\troomType: CONVERSATION.TYPE.GROUP,\n\t\troomName: conversationName,\n\t\tobjectType,\n\t})\n}\n\n/**\n * Create a new private conversation.\n *\n * @param {string} conversationName The name for the new conversation\n * @param {string} [objectType] The conversation object type\n */\nconst createPublicConversation = async function(conversationName, objectType) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room'), {\n\t\troomType: CONVERSATION.TYPE.PUBLIC,\n\t\troomName: conversationName,\n\t\tobjectType,\n\t})\n}\n\n/**\n * Set a conversation's password\n *\n * @param {string} token the conversation's token\n * @param {string} password the password to be set\n */\nconst setConversationPassword = async function(token, password) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/password', { token }), {\n\t\tpassword,\n\t})\n}\n\n/**\n * Set a conversation's name\n *\n * @param {string} token the conversation's token\n * @param {string} name the name to be set (max 255 characters)\n */\nconst setConversationName = async function(token, name) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}', { token }), {\n\t\troomName: name,\n\t})\n}\n\n/**\n * Set a conversation's description\n *\n * @param {string} token the conversation's token\n * @param {string} description the description to be set (max 500 characters)\n */\nconst setConversationDescription = async function(token, description) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/description', { token }), {\n\t\tdescription,\n\t})\n}\n\n/**\n * Delete a conversation.\n *\n * @param {string} token The token of the conversation to be deleted.\n */\nconst deleteConversation = async function(token) {\n\treturn axios.delete(generateOcsUrl('apps/spreed/api/v4/room/{token}', { token }))\n}\n\n/**\n * Add a conversation to the favorites\n *\n * @param {string} token The token of the conversation to be favorites\n */\nconst addToFavorites = async function(token) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room/{token}/favorite', { token }))\n}\n\n/**\n * Remove a conversation from the favorites\n *\n * @param {string} token The token of the conversation to be removed from favorites\n */\nconst removeFromFavorites = async function(token) {\n\treturn axios.delete(generateOcsUrl('apps/spreed/api/v4/room/{token}/favorite', { token }))\n}\n\n/**\n * Set notification level\n *\n * @param {string} token The token of the conversation to change the notification level\n * @param {number} level The notification level to set.\n */\nconst setNotificationLevel = async function(token, level) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room/{token}/notify', { token }), { level })\n}\n\n/**\n * Set call notifications\n *\n * @param {string} token The token of the conversation to change the call notification level\n * @param {number} level The call notification level.\n */\nconst setNotificationCalls = async function(token, level) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room/{token}/notify-calls', { token }), { level })\n}\n\n/**\n * Make the conversation public\n *\n * @param {string} token The token of the conversation to be removed from favorites\n */\nconst makeConversationPublic = async function(token) {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room/{token}/public', { token }))\n}\n\n/**\n * Make the conversation private\n *\n * @param {string} token The token of the conversation to be removed from favorites\n */\nconst makeConversationPrivate = async function(token) {\n\treturn axios.delete(generateOcsUrl('apps/spreed/api/v4/room/{token}/public', { token }))\n}\n\n/**\n * Change the SIP enabled\n *\n * @param {string} token The token of the conversation to be modified\n * @param {number} newState The new SIP state to set\n */\nconst setSIPEnabled = async function(token, newState) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/webinar/sip', { token }), {\n\t\tstate: newState,\n\t})\n}\n\n/**\n * Change the recording consent per conversation\n *\n * @param {string} token The token of the conversation to be modified\n * @param {number} newState The new recording consent state to set\n */\nconst setRecordingConsent = async function(token, newState) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/recording-consent', { token }), {\n\t\trecordingConsent: newState,\n\t})\n}\n\n/**\n * Change the lobby state\n *\n * @param {string} token The token of the conversation to be modified\n * @param {number} newState The new lobby state to set\n * @param {number} [timestamp] The UNIX timestamp (in seconds) to set, if any\n */\nconst changeLobbyState = async function(token, newState, timestamp) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/webinar/lobby', { token }), {\n\t\tstate: newState,\n\t\ttimer: timestamp,\n\t})\n}\n\n/**\n * Change the read-only state\n *\n * @param {string} token The token of the conversation to be modified\n * @param {number} readOnly The new read-only state to set\n */\nconst changeReadOnlyState = async function(token, readOnly) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/read-only', { token }), {\n\t\tstate: readOnly,\n\t})\n}\n\n/**\n * Change the listable scope\n *\n * @param {string} token The token of the conversation to be modified\n * @param {number} listable The new listable scope to set\n */\nconst changeListable = async function(token, listable) {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/listable', { token }), {\n\t\tscope: listable,\n\t})\n}\n\n/**\n * Set the default permissions for participants in a conversation.\n *\n * @param {string} token conversation token\n * @param {number} permissions the type of permission to be granted. Valid values are\n * any sums of 'DEFAULT', 'CUSTOM', 'CALL_START', 'CALL_JOIN', 'LOBBY_IGNORE',\n * 'PUBLISH_AUDIO', 'PUBLISH_VIDEO', 'PUBLISH_SCREEN'.\n */\nconst setConversationPermissions = async (token, permissions) => {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/permissions/default', { token }), {\n\t\tpermissions,\n\t})\n}\n\n/**\n * Set the default permissions for participants in a call. These will be reset\n * to default once the call has ended.\n *\n * @param {string} token conversation token\n * @param {number} permissions the type of permission to be granted. Valid values are\n * any sums of 'DEFAULT', 'CUSTOM', 'CALL_START', 'CALL_JOIN', 'LOBBY_IGNORE',\n * 'PUBLISH_AUDIO', 'PUBLISH_VIDEO', 'PUBLISH_SCREEN'.\n */\nconst setCallPermissions = async (token, permissions) => {\n\treturn axios.put(generateOcsUrl('apps/spreed/api/v4/room/{token}/permissions/call', { token }), {\n\t\tpermissions,\n\t})\n}\n\n/**\n * Set the message expiration\n *\n * @param {string} token conversation token\n * @param {number} seconds the seconds for the message expiration, 0 to disable\n */\nconst setMessageExpiration = async (token, seconds) => {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v4/room/{token}/message-expiration', { token }), {\n\t\tseconds,\n\t})\n}\n\nexport {\n\tfetchConversations,\n\tfetchConversation,\n\tfetchNoteToSelfConversation,\n\tsearchListedConversations,\n\tsearchPossibleConversations,\n\tcreateOneToOneConversation,\n\tcreateGroupConversation,\n\tcreatePrivateConversation,\n\tcreatePublicConversation,\n\tdeleteConversation,\n\taddToFavorites,\n\tremoveFromFavorites,\n\tsetNotificationLevel,\n\tsetNotificationCalls,\n\tmakeConversationPublic,\n\tmakeConversationPrivate,\n\tsetSIPEnabled,\n\tsetRecordingConsent,\n\tchangeLobbyState,\n\tchangeReadOnlyState,\n\tchangeListable,\n\tsetConversationPassword,\n\tsetConversationName,\n\tsetConversationDescription,\n\tsetConversationPermissions,\n\tsetCallPermissions,\n\tsetMessageExpiration,\n}\n","/**\n * @copyright Copyright (c) 2024 Maksim Sukharev <antreesy.web@gmail.com>\n *\n * @author Maksim Sukharev <antreesy.web@gmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport axios from '@nextcloud/axios'\nimport { generateOcsUrl } from '@nextcloud/router'\n\nimport type {\n\tdeleteAvatarResponse,\n\tsetEmojiAvatarParams,\n\tsetEmojiAvatarResponse,\n\tsetFileAvatarResponse\n} from '../types'\n\nconst getConversationAvatarOcsUrl = function(token: string, isDarkTheme: boolean, avatarVersion?: string): string {\n\treturn generateOcsUrl('apps/spreed/api/v1/room/{token}/avatar' + (isDarkTheme ? '/dark' : '') + (avatarVersion ? '?v={avatarVersion}' : ''), { token, avatarVersion })\n}\n\nconst getUserProxyAvatarOcsUrl = function(token: string, cloudId: string, isDarkTheme: boolean, size: 64 | 512 = 512): string {\n\treturn generateOcsUrl('apps/spreed/api/v1/proxy/{token}/user-avatar/{size}' + (isDarkTheme ? '/dark' : '') + '?cloudId={cloudId}', { token, cloudId, size })\n}\n\nconst setConversationAvatar = async function(token: string, file: File): setFileAvatarResponse {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v1/room/{token}/avatar', { token }), file)\n}\n\nconst setConversationEmojiAvatar = async function(token: string, emoji: string, color?: string | null): setEmojiAvatarResponse {\n\treturn axios.post(generateOcsUrl('apps/spreed/api/v1/room/{token}/avatar/emoji', { token }), {\n\t\temoji,\n\t\tcolor,\n\t} as setEmojiAvatarParams)\n}\n\nconst deleteConversationAvatar = async function(token: string): deleteAvatarResponse {\n\treturn axios.delete(generateOcsUrl('apps/spreed/api/v1/room/{token}/avatar', { token }))\n}\n\nexport {\n\tgetConversationAvatarOcsUrl,\n\tgetUserProxyAvatarOcsUrl,\n\tsetConversationAvatar,\n\tsetConversationEmojiAvatar,\n\tdeleteConversationAvatar,\n}\n","import { render, staticRenderFns } from \"./RoomSelector.vue?vue&type=template&id=0a5665ec&scoped=true\"\nimport script from \"./RoomSelector.vue?vue&type=script&lang=js\"\nexport * from \"./RoomSelector.vue?vue&type=script&lang=js\"\nimport style0 from \"./RoomSelector.vue?vue&type=style&index=0&id=0a5665ec&prod&lang=scss&scoped=true\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a5665ec\",\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import '../assets/Tooltip-4CSl8xev.css';\nimport { options, VTooltip } from \"floating-vue\";\nimport { VTooltip as VTooltip2, options as options2 } from \"floating-vue\";\noptions.themes.tooltip.html = false;\noptions.themes.tooltip.delay = { show: 500, hide: 200 };\noptions.themes.tooltip.distance = 10;\noptions.themes.tooltip[\"arrow-padding\"] = 3;\nexport {\n  VTooltip2 as default,\n  options2 as options\n};\n"],"names":["SIGNALING","SESSION","CHAT","CALL","CONVERSATION","ATTENDEE","PARTICIPANT","SHARED_ITEM","WEBINAR","SHARE","FLOW","POLL","PRIVACY","SIMULCAST","VIRTUAL_BACKGROUND","BOT","AVATAR","FEDERATION","canInviteToFederation","fetchConversations","options","fetchConversation","token","searchListedConversations","searchText","fetchNoteToSelfConversation","searchPossibleConversations","onlyUsers","shareTypes","type","createOneToOneConversation","userId","createGroupConversation","invite","source","createPrivateConversation","conversationName","objectType","createPublicConversation","setConversationPassword","password","setConversationName","name","setConversationDescription","description","deleteConversation","addToFavorites","removeFromFavorites","setNotificationLevel","level","setNotificationCalls","makeConversationPublic","makeConversationPrivate","setSIPEnabled","newState","setRecordingConsent","changeLobbyState","timestamp","changeReadOnlyState","readOnly","changeListable","listable","setConversationPermissions","permissions","setCallPermissions","setMessageExpiration","seconds","getConversationAvatarOcsUrl","isDarkTheme","avatarVersion","getUserProxyAvatarOcsUrl","cloudId","size","setConversationAvatar","file","setConversationEmojiAvatar","emoji","color","deleteConversationAvatar","component","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","context","originalRender","h","existing"],"sourceRoot":""}